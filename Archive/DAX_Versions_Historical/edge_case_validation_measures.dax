// =====================================================
// EDGE CASE VALIDATION MEASURES FOR RENT ROLL DAX
// =====================================================
// Purpose: Comprehensive validation of 9 critical rent roll measures
// Target: Amendment sequence logic, status handling, date boundaries
// Author: Edge Case Testing Framework
// Date: 2025-01-29
// Report Date Used: 2025-06-30 (for date boundary testing)
// =====================================================

// =====================================================
// CATEGORY 1: AMENDMENT SEQUENCE VALIDATION
// =====================================================

// Test 1.1: Multiple Amendments - Verify Latest Sequence Selection
Amendment_Sequence_Test_PROP001 = 
VAR TestProperty = "PROP001"
VAR TestTenant = "T001"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment type] <> "Termination"
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedSequence = MAXX(LatestAmendments, [amendment sequence])
VAR SelectedRent = SUMX(LatestAmendments, [monthly amount])
VAR SelectedSF = SUMX(LatestAmendments, [amendment sf])
RETURN 
    "Sequence: " & SelectedSequence & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | SF: " & FORMAT(SelectedSF, "#,##0") &
    " | Expected: Seq 3, $6,000, 2,500 SF"

// Test 1.2: Sequence Gap Handling
Amendment_Gap_Test_PROP002 = 
VAR TestProperty = "PROP002"
VAR TestTenant = "T002"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedSequence = MAXX(LatestAmendments, [amendment sequence])
VAR SelectedRent = SUMX(LatestAmendments, [monthly amount])
RETURN 
    "Gap Test - Sequence: " & SelectedSequence & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: Seq 5, $3,200"

// =====================================================
// CATEGORY 2: AMENDMENT STATUS VALIDATION
// =====================================================

// Test 2.1: Superseded Status Inclusion
Superseded_Status_Test_PROP004 = 
VAR TestProperty = "PROP004"
VAR TestTenant = "T004"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedStatus = MAXX(LatestAmendments, [amendment status])
VAR SelectedRent = SUMX(LatestAmendments, [monthly amount])
RETURN 
    "Status: " & SelectedStatus & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: Superseded, $4,500"

// Test 2.2: Termination Exclusion
Termination_Exclusion_Test_PROP005 = 
VAR TestProperty = "PROP005"
VAR TestTenant = "T005"
VAR AllAmendments = 
    FILTER(
        dim_fp_amendmentsunitspropertytenant,
        [property code] = TestProperty &&
        [tenant id] = TestTenant
    )
VAR IncludedAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment type] <> "Termination"
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR TotalCount = COUNTROWS(AllAmendments)
VAR IncludedCount = COUNTROWS(IncludedAmendments)
VAR SelectedRent = SUMX(IncludedAmendments, [monthly amount])
RETURN 
    "Total: " & TotalCount & " | Included: " & IncludedCount & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: 2 total, 1 included, $5,000"

// Test 2.3: Draft Status Exclusion
Draft_Status_Test_PROP006 = 
VAR TestProperty = "PROP006"
VAR TestTenant = "T006"
VAR IncludedAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedSequence = MAXX(IncludedAmendments, [amendment sequence])
VAR SelectedRent = SUMX(IncludedAmendments, [monthly amount])
RETURN 
    "Sequence: " & SelectedSequence & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: Seq 1 (Draft excluded), $5,000"

// =====================================================
// CATEGORY 3: DATE BOUNDARY VALIDATION
// =====================================================

// Test 3.1: Null End Date Handling
Null_End_Date_Test_PROP007 = 
VAR TestProperty = "PROP007"
VAR TestTenant = "T007"
VAR ReportDate = DATE(2025, 6, 30)
VAR CurrentAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] <= ReportDate &&
            (ISBLANK([amendment end date]) || [amendment end date] >= ReportDate)
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR IsIncluded = COUNTROWS(CurrentAmendments) > 0
VAR SelectedRent = SUMX(CurrentAmendments, [monthly amount])
RETURN 
    "Included: " & IF(IsIncluded, "Yes", "No") & 
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: Yes, $3,000 (NULL end date = MTM)"

// Test 3.2: Future Start Date Exclusion
Future_Start_Test_PROP008 = 
VAR TestProperty = "PROP008"
VAR TestTenant = "T008"
VAR ReportDate = DATE(2025, 6, 30)
VAR CurrentAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] <= ReportDate &&
            (ISBLANK([amendment end date]) || [amendment end date] >= ReportDate)
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR IsIncluded = COUNTROWS(CurrentAmendments) > 0
RETURN 
    "Included: " & IF(IsIncluded, "Yes", "No") & 
    " | Expected: No (Future start date)"

// Test 3.3: Recently Expired Exclusion
Expired_Lease_Test_PROP009 = 
VAR TestProperty = "PROP009"
VAR TestTenant = "T009"
VAR ReportDate = DATE(2025, 6, 30)
VAR CurrentAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] <= ReportDate &&
            (ISBLANK([amendment end date]) || [amendment end date] >= ReportDate)
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR IsIncluded = COUNTROWS(CurrentAmendments) > 0
RETURN 
    "Included: " & IF(IsIncluded, "Yes", "No") & 
    " | Expected: No (Expired 2025-06-29)"

// Test 3.4: Expiring Today Boundary
Expiring_Today_Test_PROP010 = 
VAR TestProperty = "PROP010"
VAR TestTenant = "T010"
VAR ReportDate = DATE(2025, 6, 30)
VAR CurrentAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] <= ReportDate &&
            (ISBLANK([amendment end date]) || [amendment end date] >= ReportDate)
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR IsIncluded = COUNTROWS(CurrentAmendments) > 0
VAR SelectedRent = SUMX(CurrentAmendments, [monthly amount])
VAR ExpiringIn12Months = 
    FILTER(
        CurrentAmendments,
        NOT(ISBLANK([amendment end date])) &&
        [amendment end date] <= ReportDate + 365
    )
VAR InExpiringList = COUNTROWS(ExpiringIn12Months) > 0
RETURN 
    "Current: " & IF(IsIncluded, "Yes", "No") & 
    " | Expiring List: " & IF(InExpiringList, "Yes", "No") &
    " | Rent: $" & FORMAT(SelectedRent, "#,##0") &
    " | Expected: Current=Yes, Expiring=Yes, $3,600"

// =====================================================
// CATEGORY 4: FINANCIAL CALCULATION VALIDATION
// =====================================================

// Test 4.1: Zero Rent Amount Handling
Zero_Rent_Test_PROP011 = 
VAR TestProperty = "PROP011"
VAR TestTenant = "T011"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedRent = SUMX(LatestAmendments, [monthly amount])
VAR SelectedSF = SUMX(LatestAmendments, [amendment sf])
VAR RentPSF = DIVIDE(SelectedRent * 12, SelectedSF, 0)
RETURN 
    "Rent: $" & FORMAT(SelectedRent, "#,##0") & 
    " | SF: " & FORMAT(SelectedSF, "#,##0") &
    " | PSF: $" & FORMAT(RentPSF, "0.00") &
    " | Expected: $0, 1,000 SF, $0.00 PSF"

// Test 4.2: Negative Rent (Credit) Handling
Negative_Rent_Test_PROP012 = 
VAR TestProperty = "PROP012"
VAR TestTenant = "T012"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR BaseRent = 
    CALCULATE(
        SUMX(dim_fp_amendmentchargeschedule, [charge amount]),
        dim_fp_amendmentchargeschedule[charge type] = "Base Rent"
    )
VAR Credits = 
    CALCULATE(
        SUMX(dim_fp_amendmentchargeschedule, [charge amount]),
        dim_fp_amendmentchargeschedule[charge type] = "TI Credit"
    )
VAR NetRent = BaseRent + Credits  // Credits are negative
RETURN 
    "Base: $" & FORMAT(BaseRent, "#,##0") & 
    " | Credit: $" & FORMAT(Credits, "#,##0") &
    " | Net: $" & FORMAT(NetRent, "#,##0") &
    " | Expected: $4,500 - $500 = $4,000"

// Test 4.3: Division by Zero Handling
Zero_SF_Test_PROP013A = 
VAR TestProperty = "PROP013A"
VAR TestTenant = "T013A"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [property code] = TestProperty &&
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR SelectedRent = SUMX(LatestAmendments, [monthly amount])
VAR SelectedSF = SUMX(LatestAmendments, [amendment sf])
VAR RentPSF = DIVIDE(SelectedRent * 12, SelectedSF, 0)
VAR HasError = ISERROR(RentPSF)
RETURN 
    "Rent: $" & FORMAT(SelectedRent, "#,##0") & 
    " | SF: " & FORMAT(SelectedSF, "#,##0") &
    " | PSF: " & IF(HasError, "ERROR", FORMAT(RentPSF, "0.00")) &
    " | Expected: $5,000, 0 SF, $0.00 (no error)"

// =====================================================
// CATEGORY 5: PROPERTY/TENANT RELATIONSHIP VALIDATION
// =====================================================

// Test 5.1: Same Tenant Multiple Properties
Multi_Property_Tenant_Test = 
VAR TestTenant = "T014"
VAR LatestAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [tenant id] = TestTenant &&
            [amendment status] IN {"Activated", "Superseded"}
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR PropertyCount = DISTINCTCOUNT(dim_fp_amendmentsunitspropertytenant[property code])
VAR TotalRent = SUMX(LatestAmendments, [monthly amount])
VAR TotalSF = SUMX(LatestAmendments, [amendment sf])
RETURN 
    "Properties: " & PropertyCount & 
    " | Total Rent: $" & FORMAT(TotalRent, "#,##0") &
    " | Total SF: " & FORMAT(TotalSF, "#,##0") &
    " | Expected: 2 properties, $13,000, 3,000 SF"

// =====================================================
// CATEGORY 6: WALT (WEIGHTED AVERAGE LEASE TERM) VALIDATION
// =====================================================

// WALT Calculation Test
WALT_Calculation_Test = 
VAR ReportDate = DATE(2025, 6, 30)
VAR CurrentAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] <= ReportDate &&
            (ISBLANK([amendment end date]) || [amendment end date] >= ReportDate)
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR WALTCalculation = 
    SUMX(
        CurrentAmendments,
        VAR MonthsRemaining = 
            IF(
                ISBLANK([amendment end date]),
                999,  // Month-to-month treated as high value
                DATEDIFF(ReportDate, [amendment end date], MONTH)
            )
        VAR WeightedTerm = MonthsRemaining * [amendment sf]
        RETURN WeightedTerm
    )
VAR TotalSF = SUMX(CurrentAmendments, [amendment sf])
VAR WALTResult = DIVIDE(WALTCalculation, TotalSF, 0)
RETURN 
    "WALT: " & FORMAT(WALTResult, "0.0") & " months" &
    " | Total SF: " & FORMAT(TotalSF, "#,##0")

// =====================================================
// CATEGORY 7: LEASING ACTIVITY VALIDATION
// =====================================================

// New Leases Count Test (Activity Period: 2024-06-01 to 2024-12-31)
New_Leases_Activity_Test = 
VAR ActivityStartDate = DATE(2024, 6, 1)
VAR ActivityEndDate = DATE(2024, 12, 31)
VAR NewLeaseAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [amendment type] = "Original Lease" &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] >= ActivityStartDate &&
            [amendment start date] <= ActivityEndDate
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR NewLeaseCount = COUNTROWS(NewLeaseAmendments)
VAR NewLeaseSF = SUMX(NewLeaseAmendments, [amendment sf])
VAR NewLeaseRent = SUMX(NewLeaseAmendments, [monthly amount])
VAR AvgStartingRentPSF = DIVIDE(NewLeaseRent * 12, NewLeaseSF, 0)
RETURN 
    "New Leases: " & NewLeaseCount &
    " | SF: " & FORMAT(NewLeaseSF, "#,##0") &
    " | Starting PSF: $" & FORMAT(AvgStartingRentPSF, "0.00") &
    " | Expected: 1 lease, 2,000 SF, $48.00 PSF"

// Renewals Count and Rent Change Test
Renewals_Activity_Test = 
VAR ActivityStartDate = DATE(2024, 6, 1)
VAR ActivityEndDate = DATE(2024, 12, 31)
VAR RenewalAmendments = 
    FILTER(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            [amendment type] = "Renewal" &&
            [amendment status] IN {"Activated", "Superseded"} &&
            [amendment start date] >= ActivityStartDate &&
            [amendment start date] <= ActivityEndDate
        ),
        [amendment sequence] = CALCULATE(
            MAX([amendment sequence]),
            ALLEXCEPT(
                dim_fp_amendmentsunitspropertytenant,
                [property hmy],
                [tenant hmy]
            )
        )
    )
VAR RenewalCount = COUNTROWS(RenewalAmendments)
VAR RenewalSF = SUMX(RenewalAmendments, [amendment sf])
// For rent change calculation, would need to compare with prior amendment
VAR TestRenewal = 
    FILTER(
        RenewalAmendments,
        [property code] = "PROP023" && [tenant id] = "T023"
    )
VAR NewRent = SUMX(TestRenewal, [monthly amount])
VAR PriorRent = 9000  // From test data
VAR RentChange = DIVIDE(NewRent - PriorRent, PriorRent, 0) * 100
RETURN 
    "Renewals: " & RenewalCount &
    " | SF: " & FORMAT(RenewalSF, "#,##0") &
    " | Sample Rent Change: " & FORMAT(RentChange, "0.0%") &
    " | Expected: 2 renewals, PROP023 +5.6% increase"

// =====================================================
// CATEGORY 8: COMPREHENSIVE VALIDATION SUMMARY
// =====================================================

// Master Edge Case Validation Summary
Edge_Case_Validation_Summary = 
VAR SequenceTests = 
    VAR Test1 = IF(FIND("Seq 3", [Amendment_Sequence_Test_PROP001]) > 0, 1, 0)
    VAR Test2 = IF(FIND("Seq 5", [Amendment_Gap_Test_PROP002]) > 0, 1, 0)
    RETURN Test1 + Test2

VAR StatusTests = 
    VAR Test3 = IF(FIND("Superseded", [Superseded_Status_Test_PROP004]) > 0, 1, 0)
    VAR Test4 = IF(FIND("$5,000", [Termination_Exclusion_Test_PROP005]) > 0, 1, 0)
    VAR Test5 = IF(FIND("$5,000", [Draft_Status_Test_PROP006]) > 0, 1, 0)
    RETURN Test3 + Test4 + Test5

VAR DateTests = 
    VAR Test6 = IF(FIND("Yes", [Null_End_Date_Test_PROP007]) > 0, 1, 0)
    VAR Test7 = IF(FIND("No", [Future_Start_Test_PROP008]) > 0, 1, 0)
    VAR Test8 = IF(FIND("No", [Expired_Lease_Test_PROP009]) > 0, 1, 0)
    RETURN Test6 + Test7 + Test8

VAR FinancialTests = 
    VAR Test9 = IF(FIND("$0", [Zero_Rent_Test_PROP011]) > 0, 1, 0)
    VAR Test10 = IF(FIND("$4,000", [Negative_Rent_Test_PROP012]) > 0, 1, 0)
    RETURN Test9 + Test10

VAR TotalTests = 10
VAR PassedTests = SequenceTests + StatusTests + DateTests + FinancialTests
VAR PassRate = DIVIDE(PassedTests, TotalTests, 0) * 100

RETURN 
    "Edge Case Validation Results:" & UNICHAR(10) &
    "Amendment Sequence Tests: " & SequenceTests & "/2" & UNICHAR(10) &
    "Status Handling Tests: " & StatusTests & "/3" & UNICHAR(10) &
    "Date Boundary Tests: " & DateTests & "/3" & UNICHAR(10) &
    "Financial Tests: " & FinancialTests & "/2" & UNICHAR(10) &
    "Overall Pass Rate: " & FORMAT(PassRate, "0.0%") & " (" & PassedTests & "/" & TotalTests & ")"