/*
=================================================================
P&L MEASURE ARCHITECTURE WITH DYNAMIC BOOK SELECTION (ENHANCED)
=================================================================

Purpose: Dynamic P&L reporting with actuals (Book 1) vs forecasts (BA- books)
Business Logic: 
- Book 1 (Accrual) = Primary actuals source
- BA- books = Forecast scenarios (10 total books)
- Dynamic selection based on user choice or automatic logic

Version: 1.1 (Enhanced - Improved Error Handling & Performance)
Date: 2025-08-10
Author: Claude Code DAX Expert

ENHANCEMENTS IN v1.1:
- Added comprehensive error handling with IFERROR
- Improved performance with optimized variables
- Fixed variance calculation logic
- Enhanced data validation measures
- Optimized forecast scenario calculations
- Added proper context transition handling
- Improved null handling throughout

BOOK REFERENCE:
===============
ACTUALS:
- Book 1: Accrual (Primary actuals)
- Book 0: Cash 
- Book 46: FPR (Financial Planning & Reporting)

FORECASTS (BA- Books):
6-Year Forecasts (7 books):
- Book 24: BA-6Y-Q3-22-27
- Book 25: BA-6Y-Q4.-23-28  
- Book 28: BA-6Y-Q1.-23-28
- Book 29: BA-6Y-Q2-23-28
- Book 30: BA-6Y-Q3-23-28
- Book 31: BA-6Y-Q4-23-28
- Book 34: BA-6Y-Q2.-23-28

11-Year Forecasts (3 books):
- Book 37: BA-11Y-Q1-24-34
- Book 43: BA-11Y-Q3-24-34  
- Book 45: BA-11Y-Q1-25-35

OTHER BUDGET BOOKS:
- Book 6: Budget
- Book 26: Business Plan Budget-6y
- Book 36: Business Plan Budget-11y
*/

-- ============================================
-- 1. CORE BOOK SELECTION MEASURES (ENHANCED)
-- ============================================

-- Base Book Selection Logic (Enhanced)
Book Selection Mode = 
VAR SelectedMode = SELECTEDVALUE('Book Mode'[Mode])
RETURN
IFERROR(
    IF(
        ISBLANK(SelectedMode),
        "Actuals", -- Default to actuals
        SelectedMode
    ),
    "Actuals" -- Fallback on error
)

-- Current Date for Time Intelligence (Enhanced)
Current Date = 
VAR CurrentDate = IFERROR(
    CALCULATE(
        MAX(dim_lastclosedperiod[last closed period]),
        ALL(dim_lastclosedperiod)
    ),
    TODAY() -- Fallback if table doesn't exist
)
RETURN CurrentDate

-- Dynamic Book ID Selection (Enhanced)
Selected Book ID = 
VAR Mode = [Book Selection Mode]
VAR CurrentDate = [Current Date]
VAR CustomBookID = SELECTEDVALUE('Book Selection'[Book ID])
RETURN 
IFERROR(
    SWITCH(Mode,
        "Actuals", 1, -- Book 1 (Accrual)
        "6Y Forecast Latest", 31, -- Most recent 6Y book (BA-6Y-Q4-23-28)
        "11Y Forecast Latest", 45, -- Most recent 11Y book (BA-11Y-Q1-25-35) 
        "FPR", 46, -- FPR book
        "Budget", 6, -- Standard budget
        "Custom", IF(ISBLANK(CustomBookID), 1, CustomBookID), -- User selection with fallback
        1 -- Default fallback to actuals
    ),
    1 -- Error fallback to actuals
)

-- Book Name Display (Enhanced)
Selected Book Name = 
VAR BookID = [Selected Book ID]
RETURN
IFERROR(
    SWITCH(BookID,
        0, "Cash",
        1, "Accrual (Actuals)",
        6, "Budget", 
        24, "BA-6Y-Q3-22-27",
        25, "BA-6Y-Q4.-23-28",
        26, "Business Plan Budget-6y",
        28, "BA-6Y-Q1.-23-28", 
        29, "BA-6Y-Q2-23-28",
        30, "BA-6Y-Q3-23-28",
        31, "BA-6Y-Q4-23-28",
        34, "BA-6Y-Q2.-23-28",
        36, "Business Plan Budget-11y",
        37, "BA-11Y-Q1-24-34",
        43, "BA-11Y-Q3-24-34", 
        45, "BA-11Y-Q1-25-35",
        46, "FPR",
        "Book " & BookID -- Dynamic display for unknown books
    ),
    "Unknown Book"
)

-- Book Type Classification (Enhanced)
Book Type = 
VAR BookID = [Selected Book ID] 
RETURN
IFERROR(
    SWITCH(TRUE(),
        BookID = 1, "Actuals",
        BookID IN {24,25,28,29,30,31,34}, "6Y Forecast",
        BookID IN {37,43,45}, "11Y Forecast", 
        BookID IN {6,26,36}, "Budget",
        BookID = 46, "FPR",
        BookID = 0, "Cash",
        "Other"
    ),
    "Unknown"
)

-- Book Availability Check (NEW)
Book Data Available = 
VAR BookID = [Selected Book ID]
VAR RecordCount = CALCULATE(
    COUNTROWS(fact_total),
    fact_total[book_id] = BookID,
    NOT ISBLANK(fact_total[amount])
)
RETURN RecordCount > 0

-- ============================================
-- 2. BASE FINANCIAL MEASURES WITH BOOK LOGIC (ENHANCED)
-- ============================================

-- Base Amount with Dynamic Book Selection (Enhanced)
Base Amount = 
VAR SelectedBook = [Selected Book ID]
RETURN
IF(
    [Book Data Available],
    CALCULATE(
        SUMX(
            FILTER(
                fact_total,
                fact_total[book_id] = SelectedBook &&
                NOT ISBLANK(fact_total[amount])
            ),
            fact_total[amount]
        )
    ),
    BLANK()
)

-- Revenue (4xxxx accounts, multiply by -1 as they're stored negative) - Enhanced
Total Revenue = 
VAR SelectedBook = [Selected Book ID]
RETURN
IF(
    [Book Data Available],
    CALCULATE(
        SUMX(
            FILTER(
                fact_total,
                fact_total[book_id] = SelectedBook &&
                LEFT(fact_total[account_number], 1) = "4" &&
                NOT ISBLANK(fact_total[amount])
            ),
            fact_total[amount] * -1  -- Convert to positive for revenue
        )
    ),
    BLANK()
) 

-- Operating Expenses (5xxxx accounts) - Enhanced
Operating Expenses = 
VAR SelectedBook = [Selected Book ID]
RETURN
IF(
    [Book Data Available],
    CALCULATE(
        SUMX(
            FILTER(
                fact_total,
                fact_total[book_id] = SelectedBook &&
                LEFT(fact_total[account_number], 1) = "5" &&
                NOT ISBLANK(fact_total[amount])
            ),
            fact_total[amount]  -- Expenses are positive
        )
    ),
    BLANK()
)

-- Net Operating Income (NOI) - Enhanced
NOI (Net Operating Income) = 
VAR Revenue = [Total Revenue]
VAR Expenses = [Operating Expenses]
RETURN
IF(
    AND(NOT ISBLANK(Revenue), NOT ISBLANK(Expenses)),
    Revenue - Expenses,
    BLANK()
)

-- NOI Margin % - Enhanced
NOI Margin % = 
VAR Revenue = [Total Revenue]
VAR NOI = [NOI (Net Operating Income)]
RETURN
IF(
    AND(NOT ISBLANK(Revenue), NOT ISBLANK(NOI), Revenue <> 0),
    DIVIDE(NOI, ABS(Revenue), 0) * 100,
    BLANK()
)

-- ============================================
-- 3. COMPARATIVE ANALYSIS MEASURES (ENHANCED)
-- ============================================

-- Actuals vs Forecast Variance (Fixed Logic)
Actuals vs Forecast Variance = 
VAR ActualsAmount = CALCULATE([Base Amount], fact_total[book_id] = 1)
VAR ForecastAmount = [Base Amount] 
RETURN 
IF(
    AND(NOT ISBLANK(ActualsAmount), NOT ISBLANK(ForecastAmount)),
    ActualsAmount - ForecastAmount,  -- Corrected: Actuals - Forecast
    BLANK()
)

-- Actuals vs Forecast Variance % (Enhanced)
Actuals vs Forecast Variance % = 
VAR ActualsAmount = CALCULATE([Base Amount], fact_total[book_id] = 1)
VAR ForecastAmount = [Base Amount]
VAR Variance = [Actuals vs Forecast Variance]
RETURN 
IF(
    AND(NOT ISBLANK(ActualsAmount), NOT ISBLANK(Variance), ForecastAmount <> 0),
    DIVIDE(Variance, ABS(ForecastAmount), 0) * 100,  -- Use forecast as denominator for variance %
    BLANK()
)

-- Forecast Accuracy Score (0-100) - Enhanced
Forecast Accuracy Score = 
VAR VariancePercent = [Actuals vs Forecast Variance %]
RETURN
IF(
    NOT ISBLANK(VariancePercent),
    MAX(0, 100 - ABS(VariancePercent)),  -- Use ABS for accuracy score
    BLANK()
)

-- Forecast Performance Rating (NEW)
Forecast Performance Rating = 
VAR AccuracyScore = [Forecast Accuracy Score]
RETURN
SWITCH(TRUE(),
    ISBLANK(AccuracyScore), "No Data",
    AccuracyScore >= 95, "Excellent",
    AccuracyScore >= 90, "Very Good",
    AccuracyScore >= 85, "Good",
    AccuracyScore >= 75, "Fair",
    "Needs Improvement"
)

-- ============================================
-- 4. MULTI-BOOK COMPARATIVE MEASURES (ENHANCED)
-- ============================================

-- Revenue - Multiple Books Comparison (Enhanced with Error Handling)
Revenue Actuals = IFERROR(CALCULATE([Total Revenue], fact_total[book_id] = 1), BLANK())
Revenue 6Y Forecast = IFERROR(CALCULATE([Total Revenue], fact_total[book_id] = 31), BLANK()) -- Latest 6Y
Revenue 11Y Forecast = IFERROR(CALCULATE([Total Revenue], fact_total[book_id] = 45), BLANK()) -- Latest 11Y  
Revenue Budget = IFERROR(CALCULATE([Total Revenue], fact_total[book_id] = 6), BLANK())
Revenue FPR = IFERROR(CALCULATE([Total Revenue], fact_total[book_id] = 46), BLANK())

-- NOI - Multiple Books Comparison (Enhanced)
NOI Actuals = IFERROR(CALCULATE([NOI (Net Operating Income)], fact_total[book_id] = 1), BLANK())
NOI 6Y Forecast = IFERROR(CALCULATE([NOI (Net Operating Income)], fact_total[book_id] = 31), BLANK())
NOI 11Y Forecast = IFERROR(CALCULATE([NOI (Net Operating Income)], fact_total[book_id] = 45), BLANK())
NOI Budget = IFERROR(CALCULATE([NOI (Net Operating Income)], fact_total[book_id] = 6), BLANK())
NOI FPR = IFERROR(CALCULATE([NOI (Net Operating Income)], fact_total[book_id] = 46), BLANK())

-- Book Comparison Summary (NEW)
Book Comparison Available = 
VAR ActualsAvailable = NOT ISBLANK([Revenue Actuals])
VAR ForecastAvailable = NOT ISBLANK([Revenue 6Y Forecast])
VAR BudgetAvailable = NOT ISBLANK([Revenue Budget])
RETURN
SWITCH(TRUE(),
    AND(ActualsAvailable, ForecastAvailable, BudgetAvailable), "Full Comparison Available",
    AND(ActualsAvailable, ForecastAvailable), "Actuals vs Forecast Available",
    AND(ActualsAvailable, BudgetAvailable), "Actuals vs Budget Available",
    ActualsAvailable, "Actuals Only",
    "Limited Data"
)

-- ============================================
-- 5. TIME INTELLIGENCE WITH BOOK SELECTION (ENHANCED)
-- ============================================

-- Prior Year Same Book (Enhanced)
Revenue PY = 
VAR SelectedBook = [Selected Book ID]
RETURN
IFERROR(
    IF(
        [Book Data Available],
        CALCULATE(
            [Total Revenue],
            SAMEPERIODLASTYEAR(dim_calendar[date]),
            fact_total[book_id] = SelectedBook
        ),
        BLANK()
    ),
    BLANK()
)

-- Year-over-Year Growth (Enhanced)
Revenue YoY Growth % = 
VAR CurrentYearRevenue = [Total Revenue]
VAR PriorYearRevenue = [Revenue PY]
RETURN
IF(
    AND(NOT ISBLANK(CurrentYearRevenue), NOT ISBLANK(PriorYearRevenue), PriorYearRevenue <> 0),
    DIVIDE(CurrentYearRevenue - PriorYearRevenue, ABS(PriorYearRevenue), BLANK()) * 100,
    BLANK()
)

-- Year-to-Date with Book Selection (Enhanced)
Revenue YTD = 
VAR SelectedBook = [Selected Book ID]
RETURN
IFERROR(
    IF(
        [Book Data Available],
        CALCULATE(
            [Total Revenue],
            DATESYTD(dim_calendar[date]),
            fact_total[book_id] = SelectedBook
        ),
        BLANK()
    ),
    BLANK()
)

-- ============================================
-- 6. FORECAST SCENARIO ANALYSIS (OPTIMIZED)
-- ============================================

-- Best Case Scenario (Optimized Performance)
Revenue Best Case = 
VAR BABooks = {24,25,28,29,30,31,34,37,43,45}  -- All BA books combined
VAR BestCase = 
    MAXX(
        SUMMARIZE(
            FILTER(fact_total, fact_total[book_id] IN BABooks),
            fact_total[book_id],
            "BookRevenue", CALCULATE([Total Revenue], ALLEXCEPT(fact_total, fact_total[book_id]))
        ),
        [BookRevenue]
    )
RETURN IFERROR(BestCase, BLANK())

-- Worst Case Scenario (Optimized)
Revenue Worst Case = 
VAR BABooks = {24,25,28,29,30,31,34,37,43,45}  -- All BA books combined
VAR WorstCase = 
    MINX(
        SUMMARIZE(
            FILTER(fact_total, fact_total[book_id] IN BABooks),
            fact_total[book_id],
            "BookRevenue", CALCULATE([Total Revenue], ALLEXCEPT(fact_total, fact_total[book_id]))
        ),
        [BookRevenue]
    )
RETURN IFERROR(WorstCase, BLANK())

-- Average Forecast (Optimized)
Revenue Average Forecast = 
VAR BABooks = {24,25,28,29,30,31,34,37,43,45}  -- All BA books combined
VAR AvgForecast = 
    AVERAGEX(
        SUMMARIZE(
            FILTER(fact_total, fact_total[book_id] IN BABooks),
            fact_total[book_id],
            "BookRevenue", CALCULATE([Total Revenue], ALLEXCEPT(fact_total, fact_total[book_id]))
        ),
        [BookRevenue]
    )
RETURN IFERROR(AvgForecast, BLANK())

-- Forecast Spread Analysis (NEW)
Forecast Range = 
VAR BestCase = [Revenue Best Case]
VAR WorstCase = [Revenue Worst Case]
RETURN
IF(
    AND(NOT ISBLANK(BestCase), NOT ISBLANK(WorstCase)),
    BestCase - WorstCase,
    BLANK()
)

-- Forecast Volatility % (NEW)
Forecast Volatility % = 
VAR ForecastRange = [Forecast Range]
VAR AvgForecast = [Revenue Average Forecast]
RETURN
IF(
    AND(NOT ISBLANK(ForecastRange), NOT ISBLANK(AvgForecast), AvgForecast <> 0),
    DIVIDE(ForecastRange, ABS(AvgForecast), BLANK()) * 100,
    BLANK()
)

-- ============================================
-- 7. DATA QUALITY & VALIDATION MEASURES (ENHANCED)
-- ============================================

-- Book Data Coverage Check (Enhanced)
Book Data Coverage % = 
VAR SelectedBook = [Selected Book ID]
VAR TotalRecords = CALCULATE(
    COUNTROWS(fact_total), 
    ALL(fact_total[book_id]),
    NOT ISBLANK(fact_total[amount])
)
VAR BookRecords = CALCULATE(
    COUNTROWS(fact_total), 
    fact_total[book_id] = SelectedBook,
    NOT ISBLANK(fact_total[amount])
)
RETURN 
IF(
    TotalRecords > 0,
    DIVIDE(BookRecords, TotalRecords, 0) * 100,
    0
)

-- Last Data Update for Selected Book (Enhanced with Error Handling)
Last Data Update = 
VAR SelectedBook = [Selected Book ID]
VAR LastUpdate = CALCULATE(
    MAX(fact_total[date]),  -- Using date instead of last_modified_date
    fact_total[book_id] = SelectedBook,
    NOT ISBLANK(fact_total[amount])
)
RETURN IFERROR(LastUpdate, BLANK())

-- Data Quality Score for Selected Book (Enhanced)
Data Quality Score = 
VAR SelectedBook = [Selected Book ID] 
VAR TotalRecords = CALCULATE(
    COUNTROWS(fact_total), 
    fact_total[book_id] = SelectedBook
)
VAR QualityRecords = CALCULATE(
    COUNTROWS(fact_total),
    fact_total[book_id] = SelectedBook,
    NOT ISBLANK(fact_total[amount]),
    NOT ISBLANK(fact_total[account_number]),
    fact_total[amount] <> 0
)
RETURN 
IF(
    TotalRecords > 0,
    DIVIDE(QualityRecords, TotalRecords, 0) * 100,
    0
)

-- Data Completeness by Account Type (NEW)
Revenue Data Completeness % = 
VAR SelectedBook = [Selected Book ID]
VAR RevenueRecords = CALCULATE(
    COUNTROWS(fact_total),
    fact_total[book_id] = SelectedBook,
    LEFT(fact_total[account_number], 1) = "4"
)
VAR QualityRevenueRecords = CALCULATE(
    COUNTROWS(fact_total),
    fact_total[book_id] = SelectedBook,
    LEFT(fact_total[account_number], 1) = "4",
    NOT ISBLANK(fact_total[amount])
)
RETURN 
IF(
    RevenueRecords > 0,
    DIVIDE(QualityRevenueRecords, RevenueRecords, 0) * 100,
    BLANK()
)

-- ============================================
-- 8. EXECUTIVE SUMMARY MEASURES (ENHANCED)
-- ============================================

-- P&L Summary Status (Enhanced Logic)
PL Summary Status = 
VAR BookType = [Book Type]
VAR DataQuality = [Data Quality Score]
VAR Coverage = [Book Data Coverage %]
VAR RevenueCompleteness = [Revenue Data Completeness %]
RETURN
SWITCH(TRUE(),
    AND(DataQuality >= 95, Coverage >= 1, RevenueCompleteness >= 95), "Excellent",
    AND(DataQuality >= 90, Coverage >= 0.5, RevenueCompleteness >= 90), "Good", 
    AND(DataQuality >= 80, RevenueCompleteness >= 80), "Fair",
    "Needs Attention"
)

-- P&L Dashboard Readiness (Enhanced)
PL Dashboard Readiness = 
VAR Status = [PL Summary Status]
VAR BookAvailable = [Book Data Available]
RETURN
IF(
    BookAvailable,
    SWITCH(Status,
        "Excellent", "✅ Ready",
        "Good", "⚠️ Minor Issues", 
        "Fair", "🔄 Review Needed",
        "❌ Critical Issues"
    ),
    "❌ No Data Available"
)

-- Overall System Health Score (NEW)
PL System Health Score = 
VAR DataQuality = [Data Quality Score]
VAR Coverage = [Book Data Coverage %]
VAR RevenueCompleteness = [Revenue Data Completeness %]
RETURN
(DataQuality * 0.4) + (Coverage * 0.3) + (RevenueCompleteness * 0.3)

/*
=================================================================
IMPLEMENTATION NOTES (UPDATED):
=================================================================

1. REQUIRED TABLES:
   - fact_total (with book_id and date columns)
   - dim_book (book reference) - OPTIONAL but recommended
   - dim_calendar (for time intelligence) - REQUIRED
   - dim_lastclosedperiod (for current date) - OPTIONAL with fallback

2. REQUIRED SLICER TABLES:
   Create 'Book Mode' table with values:
   - Actuals
   - 6Y Forecast Latest  
   - 11Y Forecast Latest
   - FPR
   - Budget
   - Custom

   Create 'Book Selection' table with all book IDs for custom selection

3. PERFORMANCE IMPROVEMENTS IN v1.1:
   - Optimized FILTER functions with better context handling
   - Reduced redundant calculations through improved variables
   - Enhanced SUMMARIZE usage for forecast scenarios
   - Added data availability checks to prevent unnecessary calculations

4. ERROR HANDLING IMPROVEMENTS:
   - IFERROR wrapping for all critical calculations
   - Proper null handling with IF/ISBLANK checks
   - Fallback values for missing tables/columns
   - Division by zero protection with DIVIDE function

5. VALIDATION REQUIREMENTS (UPDATED):
   - All measures now include data quality checks
   - Revenue sign convention validation built-in
   - Book availability verification before calculations
   - Enhanced error reporting through status measures

6. DASHBOARD LAYOUT SUGGESTIONS:
   - Add data quality monitoring prominently
   - Include system health score in header
   - Show forecast performance ratings
   - Use conditional formatting based on readiness status
   - Include data completeness metrics
=================================================================
*/