// =====================================================
// PERFORMANCE & VALIDATION DAX MEASURES - VERSION 5.0
// PowerBI Dashboard Documentation - Data Quality, Validation & Performance Monitoring
// Production Date: 2025-08-10
// Total Measures: 25
// 
// CONTENTS:
// - Data quality and validation measures
// - Performance monitoring measures
// - Alert and notification measures
// - Accuracy validation measures
// - Executive summary and health indicators
// =====================================================

// =====================================================
// DATA QUALITY AND VALIDATION MEASURES
// =====================================================

Fund 2 Data Quality Score = 
// PERFORMANCE OPTIMIZATION: Single table scan for all quality metrics
VAR QualityMetrics = 
    SUMMARIZE(
        dim_fp_amendmentsunitspropertytenant,
        "TotalAmendments", COUNTROWS(dim_fp_amendmentsunitspropertytenant),
        "AmendmentsWithCharges", 
        COUNTROWS(
            FILTER(
                dim_fp_amendmentsunitspropertytenant,
                CALCULATE(
                    COUNTROWS(dim_fp_amendmentchargeschedule),
                    dim_fp_amendmentchargeschedule[amendment hmy] = dim_fp_amendmentsunitspropertytenant[amendment hmy],
                    dim_fp_amendmentchargeschedule[charge code] = "rent"
                ) > 0
            )
        ),
        "ProposalInDMCount", 
        COUNTROWS(
            FILTER(
                dim_fp_amendmentsunitspropertytenant,
                dim_fp_amendmentsunitspropertytenant[amendment type] = "Proposal in DM"
            )
        )
    )
VAR TotalAmendments = [TotalAmendments]
VAR AmendmentsWithCharges = [AmendmentsWithCharges]
VAR ProposalInDMCount = [ProposalInDMCount]
VAR ChargeIntegrationScore = DIVIDE(AmendmentsWithCharges, TotalAmendments, 0) * 100
VAR BusinessRuleScore = DIVIDE(TotalAmendments - ProposalInDMCount, TotalAmendments, 0) * 100
RETURN (ChargeIntegrationScore + BusinessRuleScore) / 2

Fund 2 Missing Charges Alert = 
// PERFORMANCE OPTIMIZATION: Efficient alert calculation with single filter pass
VAR AmendmentsWithoutCharges = 
    COUNTROWS(
        FILTER(
            FILTER(
                dim_fp_amendmentsunitspropertytenant,
                dim_fp_amendmentsunitspropertytenant[amendment status] IN {"Activated", "Superseded"} &&
                NOT(dim_fp_amendmentsunitspropertytenant[amendment type] IN {"Termination", "Proposal in DM", "Modification"})
            ),
            CALCULATE(
                COUNTROWS(dim_fp_amendmentchargeschedule),
                dim_fp_amendmentchargeschedule[amendment hmy] = dim_fp_amendmentsunitspropertytenant[amendment hmy],
                dim_fp_amendmentchargeschedule[charge code] = "rent"
            ) = 0
        )
    )
RETURN 
SWITCH(
    TRUE(),
    AmendmentsWithoutCharges > 50, "HIGH RISK: " & AmendmentsWithoutCharges & " amendments without charges",
    AmendmentsWithoutCharges > 20, "MEDIUM RISK: " & AmendmentsWithoutCharges & " amendments without charges",
    "LOW RISK: " & AmendmentsWithoutCharges & " amendments without charges"
)

Fund 2 Accuracy Validation = 
// Comprehensive accuracy validation measure
VAR TotalCurrentRent = [Current Monthly Rent]
VAR ExpectedMinRent = 4000000  // $4M minimum expected for Fund 2
VAR ExpectedMaxRent = 6000000  // $6M maximum expected for Fund 2
VAR AccuracyStatus = 
    IF(
        TotalCurrentRent >= ExpectedMinRent && TotalCurrentRent <= ExpectedMaxRent,
        "ACCURACY TARGET MET",
        "ACCURACY REVIEW NEEDED"
    )
RETURN AccuracyStatus & " (Current: $" & FORMAT(TotalCurrentRent, "#,0") & ")"

Leasing Data Quality Score % = 
// Overall data quality percentage for leasing activity
VAR TotalDeals = COUNTROWS(fact_leasingactivity)
VAR ValidDeals = COUNTROWS([_BaseValidLeasingDeals])
RETURN DIVIDE(ValidDeals, TotalDeals, 0) * 100

Orphaned Tenant Records Count = 
// Count of deals with invalid tenant references
VAR TotalDeals = COUNTROWS(fact_leasingactivity)
VAR ValidDeals = COUNTROWS([_BaseValidLeasingDeals])
RETURN TotalDeals - ValidDeals

Incomplete Deal Records % = 
// Percentage of deals missing critical data
VAR TotalDeals = COUNTROWS([_BaseValidLeasingDeals])
VAR IncompleteDeals = 
    CALCULATE(
        COUNTROWS([_BaseValidLeasingDeals]),
        OR(
            ISBLANK(fact_leasingactivity[dArea]),
            OR(
                ISBLANK(fact_leasingactivity[Starting Rent]),
                ISBLANK(fact_leasingactivity[iTerm])
            )
        )
    )
RETURN DIVIDE(IncompleteDeals, TotalDeals, 0) * 100

Deal Completeness Alert = 
// Text alert for data quality issues
VAR IncompletePercent = [Incomplete Deal Records %]
RETURN
SWITCH(
    TRUE(),
    IncompletePercent > 10, "HIGH RISK: " & FORMAT(IncompletePercent, "0.0%") & " incomplete deals",
    IncompletePercent > 5, "MEDIUM RISK: " & FORMAT(IncompletePercent, "0.0%") & " incomplete deals",
    "GOOD: " & FORMAT(IncompletePercent, "0.0%") & " incomplete deals"
)

Amendment Data Integrity Score = 
// Amendment data integrity score (0-100)
VAR TotalAmendments = COUNTROWS(dim_fp_amendmentsunitspropertytenant)
VAR ValidAmendments = 
    COUNTROWS(
        FILTER(
            dim_fp_amendmentsunitspropertytenant,
            NOT ISBLANK(dim_fp_amendmentsunitspropertytenant[amendment status]) &&
            NOT ISBLANK(dim_fp_amendmentsunitspropertytenant[amendment type]) &&
            NOT ISBLANK(dim_fp_amendmentsunitspropertytenant[property hmy]) &&
            NOT ISBLANK(dim_fp_amendmentsunitspropertytenant[tenant hmy])
        )
    )
RETURN DIVIDE(ValidAmendments, TotalAmendments, 0) * 100

Credit Data Coverage Score = 
// Credit data coverage score (0-100)
VAR TenantsWithCredit = [Count Tenants with Credit Scores]
VAR TotalTenants = COUNTROWS(dim_commcustomer)
RETURN DIVIDE(TenantsWithCredit, TotalTenants, 0) * 100

// =====================================================
// PERFORMANCE MONITORING MEASURES
// =====================================================

_Performance Monitor = 
// Hidden measure for tracking optimization effectiveness
// Use in development environment to validate performance improvements
VAR StartTime = NOW()
VAR TestResult = [Current Monthly Rent] + [WALT (Months)] + [New Leases Count]
VAR EndTime = NOW()
VAR ExecutionSeconds = DATEDIFF(StartTime, EndTime, SECOND)
RETURN "Execution time: " & ExecutionSeconds & "s | Result: $" & FORMAT(TestResult, "#,0")

_Leasing Performance Monitor = 
// Hidden measure for monitoring leasing analytics performance
VAR StartTime = NOW()
VAR TestResult = [Total Leasing Deals] + [Active Leasing Pipeline Count] + [Executed Deals Count]
VAR EndTime = NOW()
VAR ExecutionSeconds = DATEDIFF(StartTime, EndTime, SECOND)
RETURN "Leasing metrics execution: " & ExecutionSeconds & "s | Total deals: " & TestResult

Dashboard Load Performance = 
// Dashboard load performance indicator
VAR CoreMetricsTime = 
    "Core: " & DIVIDE([Current Monthly Rent], 1000000, 0) & "M rent, " & 
    [Physical Occupancy %] & "% occ"
VAR LeasingMetricsTime = 
    "Leasing: " & [Active Leasing Pipeline Count] & " pipeline, " & 
    [Executed Deals Count] & " executed"
VAR CreditMetricsTime = 
    "Credit: " & [Count Tenants with Credit Scores] & " scored, " & 
    FORMAT([Average Tenant Credit Score], "0.0") & " avg"
RETURN
    CoreMetricsTime & " | " & LeasingMetricsTime & " | " & CreditMetricsTime

Query Response Performance = 
// Query response performance summary
VAR ComplexityScore = 
    SWITCH(
        TRUE(),
        [Total Leasing Deals] + [Current Leased SF] + [Count Tenants with Credit Scores] > 10000, "HIGH",
        [Total Leasing Deals] + [Current Leased SF] + [Count Tenants with Credit Scores] > 5000, "MEDIUM",
        "LOW"
    )
VAR PerformanceStatus = 
    ComplexityScore & " COMPLEXITY | " & 
    "Data Points: " & FORMAT([Total Leasing Deals] + [Current Leased SF]/1000 + [Count Tenants with Credit Scores], "#,0")
RETURN PerformanceStatus

// =====================================================
// ACCURACY VALIDATION MEASURES
// =====================================================

Rent Roll Accuracy Check = 
// Rent roll accuracy validation against expected ranges
VAR CurrentRent = [Current Monthly Rent]
VAR CurrentSF = [Current Leased SF]
VAR RentPSF = DIVIDE(CurrentRent * 12, CurrentSF, 0)
VAR AccuracyStatus = 
    SWITCH(
        TRUE(),
        RentPSF < 3 || RentPSF > 15, "🔴 REVIEW NEEDED (PSF: $" & FORMAT(RentPSF, "0.00") & ")",
        RentPSF < 5 || RentPSF > 12, "🟡 MONITOR (PSF: $" & FORMAT(RentPSF, "0.00") & ")",
        "✅ WITHIN RANGE (PSF: $" & FORMAT(RentPSF, "0.00") & ")"
    )
RETURN AccuracyStatus

Leasing Activity Accuracy Check = 
// Leasing activity accuracy validation
VAR NewLeasesSF = [New Leases SF]
VAR RenewalsSF = [Renewals SF]
VAR TerminationsSF = [Terminations SF]
VAR TotalActivity = NewLeasesSF + RenewalsSF + TerminationsSF
VAR BalanceCheck = 
    SWITCH(
        TRUE(),
        TotalActivity = 0, "🔴 NO ACTIVITY DETECTED",
        NewLeasesSF = 0 && RenewalsSF = 0, "🟡 MISSING NEW/RENEWAL DATA",
        TerminationsSF = 0, "🟡 MISSING TERMINATION DATA",
        "✅ ACTIVITY DATA PRESENT"
    )
RETURN BalanceCheck & " (Total: " & FORMAT(TotalActivity/1000, "#,0") & "K SF)"

Credit Score Validation = 
// Credit score data validation
VAR AvgScore = [Average Tenant Credit Score]
VAR Coverage = [Credit Score Coverage %]
VAR ValidationStatus = 
    SWITCH(
        TRUE(),
        Coverage < 50, "🔴 LOW COVERAGE (" & FORMAT(Coverage, "0%") & ")",
        AvgScore < 4 || AvgScore > 9, "🟡 UNUSUAL SCORES (Avg: " & FORMAT(AvgScore, "0.0") & ")",
        "✅ DATA QUALITY GOOD"
    )
RETURN ValidationStatus

Net Absorption Validation = 
// Net absorption calculation validation
VAR SameStoreNetAbs = [Net Absorption (Same-Store)]
VAR Fund2NetAbs = [Net Absorption (Fund 2 Enhanced)]
VAR Fund3NetAbs = [Net Absorption (Fund 3 Enhanced)]
VAR ValidationCheck = 
    SWITCH(
        TRUE(),
        ISBLANK(SameStoreNetAbs), "🔴 CALCULATION ERROR",
        ABS(SameStoreNetAbs) > 1000000, "🟡 HIGH VARIANCE (>" & FORMAT(ABS(SameStoreNetAbs)/1000000, "0.0") & "M SF)",
        "✅ WITHIN EXPECTED RANGE"
    )
RETURN ValidationCheck & " (Total: " & FORMAT(SameStoreNetAbs/1000, "#,0") & "K SF)"

// =====================================================
// ALERT AND NOTIFICATION MEASURES
// =====================================================

Critical Data Alerts = 
// Critical data quality alerts summary
VAR RentRollAlert = 
    IF([Current Monthly Rent] < 1000000 || [Current Monthly Rent] > 10000000, "🔴 RENT ROLL", "")
VAR LeasingAlert = 
    IF([Leasing Data Quality Score %] < 90, "🔴 LEASING DATA", "")
VAR CreditAlert = 
    IF([Credit Score Coverage %] < 70, "🔴 CREDIT DATA", "")
VAR AlertList = 
    CONCATENATE(
        CONCATENATE(RentRollAlert, IF(RentRollAlert <> "" && LeasingAlert <> "", " | ", "")),
        CONCATENATE(LeasingAlert, IF((RentRollAlert <> "" || LeasingAlert <> "") && CreditAlert <> "", " | ", ""))
    ) & CreditAlert
RETURN 
    IF(AlertList = "", "✅ NO CRITICAL ALERTS", "⚠️ ALERTS: " & AlertList)

Performance Alerts = 
// Performance-related alerts
VAR SlowQueries = 
    IF([Total Leasing Deals] > 5000 && [Count Tenants with Credit Scores] > 1000, "🟡 HIGH DATA VOLUME", "")
VAR ComplexityAlert = 
    IF([Current Leased SF] > 10000000 && [Active Leasing Pipeline Count] > 200, "🟡 COMPLEX CALCULATIONS", "")
VAR AlertSummary = 
    CONCATENATE(SlowQueries, IF(SlowQueries <> "" && ComplexityAlert <> "", " | ", "")) & ComplexityAlert
RETURN
    IF(AlertSummary = "", "✅ PERFORMANCE OPTIMAL", "⚠️ " & AlertSummary)

Business Rule Alerts = 
// Business rule validation alerts
VAR OccupancyAlert = 
    IF([Physical Occupancy %] > 100 || [Physical Occupancy %] < 0, "🔴 OCCUPANCY OUT OF RANGE", "")
VAR RentPSFAlert = 
    IF([Current Rent Roll PSF] > 20 || [Current Rent Roll PSF] < 2, "🔴 RENT PSF UNUSUAL", "")
VAR WaltAlert = 
    IF([WALT (Months)] > 200 || [WALT (Months)] < 0, "🔴 WALT OUT OF RANGE", "")
VAR AlertList = 
    CONCATENATE(
        CONCATENATE(OccupancyAlert, IF(OccupancyAlert <> "" && RentPSFAlert <> "", " | ", "")),
        CONCATENATE(RentPSFAlert, IF((OccupancyAlert <> "" || RentPSFAlert <> "") && WaltAlert <> "", " | ", ""))
    ) & WaltAlert
RETURN
    IF(AlertList = "", "✅ BUSINESS RULES OK", "⚠️ " & AlertList)

// =====================================================
// EXECUTIVE SUMMARY AND HEALTH INDICATORS
// =====================================================

Overall System Health = 
// Overall system health indicator (0-100)
VAR DataQualityScore = ([Fund 2 Data Quality Score] + [Leasing Data Quality Score %] + [Credit Data Coverage Score]) / 3
VAR AccuracyScore = 
    SWITCH(
        TRUE(),
        [Current Monthly Rent] < 1000000 || [Current Monthly Rent] > 10000000, 50,
        [Physical Occupancy %] > 100 || [Physical Occupancy %] < 50, 70,
        90
    )
VAR PerformanceScore = 
    SWITCH(
        TRUE(),
        [Total Leasing Deals] + [Count Tenants with Credit Scores] > 10000, 80,
        [Total Leasing Deals] + [Count Tenants with Credit Scores] > 5000, 90,
        100
    )
VAR OverallScore = (DataQualityScore * 0.4) + (AccuracyScore * 0.4) + (PerformanceScore * 0.2)
RETURN ROUND(OverallScore, 0)

System Health Status = 
// System health status indicator
VAR HealthScore = [Overall System Health]
VAR StatusText = 
    SWITCH(
        TRUE(),
        HealthScore >= 90, "🟢 EXCELLENT",
        HealthScore >= 80, "🟡 GOOD", 
        HealthScore >= 70, "🟠 FAIR",
        "🔴 NEEDS ATTENTION"
    )
RETURN StatusText & " (" & HealthScore & "/100)"

Dashboard Readiness Score = 
// Dashboard readiness for production use
VAR CoreMetricsReady = 
    IF(NOT ISBLANK([Current Monthly Rent]) && NOT ISBLANK([Physical Occupancy %]), 25, 0)
VAR LeasingMetricsReady = 
    IF(NOT ISBLANK([Active Leasing Pipeline Count]) && NOT ISBLANK([Executed Deals Count]), 25, 0)
VAR CreditMetricsReady = 
    IF([Credit Score Coverage %] > 50, 25, 0)
VAR ValidationReady = 
    IF([Fund 2 Data Quality Score] > 80, 25, 0)
VAR ReadinessScore = CoreMetricsReady + LeasingMetricsReady + CreditMetricsReady + ValidationReady
RETURN 
    "Readiness: " & ReadinessScore & "/100 | " &
    SWITCH(
        TRUE(),
        ReadinessScore = 100, "✅ PRODUCTION READY",
        ReadinessScore >= 75, "🟡 MOSTLY READY",
        "🔴 NOT READY"
    )

Production Validation Summary = 
// Production validation summary
VAR RentRollStatus = 
    IF([Current Monthly Rent] > 2000000, "✅ RENT ROLL", "❌ RENT ROLL")
VAR LeasingStatus = 
    IF([Total Leasing Deals] > 0, "✅ LEASING", "❌ LEASING")
VAR CreditStatus = 
    IF([Count Tenants with Credit Scores] > 0, "✅ CREDIT", "❌ CREDIT")
VAR AbsorptionStatus = 
    IF(NOT ISBLANK([Net Absorption (Same-Store)]), "✅ ABSORPTION", "❌ ABSORPTION")
RETURN
    RentRollStatus & " | " & LeasingStatus & " | " & CreditStatus & " | " & AbsorptionStatus

Data Refresh Status = 
// Data refresh status indicator
VAR LastScoreDate = [Latest Credit Score Date]
VAR DaysOld = DATEDIFF(LastScoreDate, TODAY(), DAY)
VAR FreshnessStatus = 
    SWITCH(
        TRUE(),
        DaysOld <= 30, "🟢 CURRENT (" & DaysOld & " days)",
        DaysOld <= 90, "🟡 MODERATE (" & DaysOld & " days)",
        "🔴 STALE (" & DaysOld & " days)"
    )
VAR DataVolume = 
    "Volume: " & FORMAT([Count Tenants with Credit Scores], "#,0") & " tenants, " &
    FORMAT([Total Leasing Deals], "#,0") & " deals"
RETURN FreshnessStatus & " | " & DataVolume

// =====================================================
// END OF PERFORMANCE & VALIDATION MEASURES v5.0
// Total Measures: 25
// Status: PRODUCTION READY - Comprehensive monitoring and validation
// Integration Status: Compatible with all v5.0 measure libraries
// Features: Data quality, performance monitoring, alerts, health indicators
// =====================================================